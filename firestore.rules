rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /merchants/{parent}/order/{document} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow write: if request.auth != null;
      allow delete: if false;
    }

    match /{path=**}/order/{document} {
      allow read: if request.auth != null;
    }


    match /merchants/{parent}/transactions/{document} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow write: if request.auth != null;
      allow delete: if false;
    }

    match /{path=**}/transactions/{document} {
      allow read: if request.auth != null;
    }


    match /users/{parent}/contacts/{document} {
      allow create: if request.auth.uid == parent;
      allow read: if request.auth.uid == parent;
      allow write: if request.auth.uid == parent;
      allow delete: if request.auth.uid == parent;
    }

    match /users/{parent}/transactions_history/{document} {
      allow create: if request.auth.uid == parent;
      allow read: if request.auth.uid == parent;
      allow write: if request.auth.uid == parent;
      allow delete: if request.auth.uid == parent;
    }

    match /SendBonus/{document} {
      allow create: if request.resource.data.SenderUser == /databases/$(database)/documents/users/$(request.auth.uid);
      allow read: if request.auth != null;
      allow write: if false;
      allow delete: if false;
    }

    match /merchants/{parent}/payments_order/{document} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow write: if request.auth != null;
      allow delete: if false;
    }

    match /{path=**}/payments_order/{document} {
      allow read: if request.auth != null;
    }


    match /merchants/{parent}/payorder/{document} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow write: if request.auth != null;
      allow delete: if request.auth != null;
    }

    match /{path=**}/payorder/{document} {
      allow read: if request.auth != null;
    }


    match /payments/{document} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow write: if request.auth != null;
      allow delete: if false;
    }

    match /merchants/{document} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow write: if request.auth != null;
      allow delete: if false;
    }

    match /stores/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if request.auth != null;
      allow delete: if request.auth != null;
    }

    match /counters/{document} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow write: if request.auth != null;
      allow delete: if request.auth != null;
    }

    match /users/{parent}/devicesinfo/{document} {
      allow create: if request.auth.uid == parent;
      allow read: if request.auth.uid == parent;
      allow write: if request.auth.uid == parent;
      allow delete: if request.auth.uid == parent;
    }

    match /{document=**} {
      allow read, write: if request.auth.token.email.matches("firebase@flutterflow.io");
    }

    match /peer-to-peer/{parent}/CancledOrder/{document} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow write: if request.auth != null;
      allow delete: if false;
    }

    match /{path=**}/CancledOrder/{document} {
      allow read: if request.auth != null;
    }


    match /TOPUP/{parent}/CancledRefer/{document} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow write: if request.auth != null;
      allow delete: if false;
    }

    match /{path=**}/CancledRefer/{document} {
      allow read: if request.auth != null;
    }


    match /TOPUP/{parent}/ComentByUser/{document} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow write: if request.auth != null;
      allow delete: if false;
    }

    match /{path=**}/ComentByUser/{document} {
      allow read: if request.auth != null;
    }


    match /users/{parent}/GbonusPayOrder/{document} {
      allow create: if request.auth.uid == parent;
      allow read: if request.auth != null;
      allow write: if request.auth != null;
      allow delete: if request.auth != null;
    }

    match /{path=**}/GbonusPayOrder/{document} {
      allow read: if request.auth != null;
    }


    match /GiftCard/{document} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow write: if request.auth != null;
      allow delete: if false;
    }

    match /users/{parent}/Koplenia/{document} {
      allow create: if request.auth.uid == parent;
      allow read: if request.auth.uid == parent;
      allow write: if request.auth.uid == parent;
      allow delete: if request.auth.uid == parent;
    }

    match /TOPUP/{parent}/MessageExpressSupport/{document} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow write: if request.auth != null;
      allow delete: if false;
    }

    match /{path=**}/MessageExpressSupport/{document} {
      allow read: if request.auth != null;
    }


    match /peer-to-peer/{parent}/MessageP2P/{document} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow write: if request.auth != null;
      allow delete: if false;
    }

    match /{path=**}/MessageP2P/{document} {
      allow read: if request.auth != null;
    }


    match /TOPUP/{parent}/OrderExpress/{document} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow write: if request.auth != null;
      allow delete: if false;
    }

    match /{path=**}/OrderExpress/{document} {
      allow read: if request.auth != null;
    }


    match /peer-to-peer/{parent}/OrederHistory/{document} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow write: if request.auth != null;
      allow delete: if false;
    }

    match /{path=**}/OrederHistory/{document} {
      allow read: if request.auth != null;
    }


    match /PhoneVerification/{document} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow write: if resource.data.user == /databases/$(database)/documents/users/$(request.auth.uid);
      allow delete: if false;
    }

    match /SUPPORT_GBONUS_TEAM/{document} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow write: if request.auth != null;
      allow delete: if false;
    }

    match /TOPUP/{document} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow write: if request.auth != null;
      allow delete: if false;
    }

    match /UserName/{document} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow write: if request.auth != null;
      allow delete: if false;
    }

    match /VerificationUser/{document} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow write: if false;
      allow delete: if false;
    }

    match /peer-to-peer/{parent}/appeal/{document} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow write: if request.auth != null;
      allow delete: if false;
    }

    match /{path=**}/appeal/{document} {
      allow read: if request.auth != null;
    }


    match /charity/{document} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow write: if request.auth != null;
      allow delete: if resource.data.owner == /databases/$(database)/documents/users/$(request.auth.uid);
    }

    match /peer-to-peer/{parent}/coments/{document} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow write: if request.auth != null;
      allow delete: if false;
    }

    match /{path=**}/coments/{document} {
      allow read: if request.auth != null;
    }


    match /ff_user_push_notifications/{document} {
      allow create: if /databases/$(database)/documents/users/$(request.auth.uid) == request.resource.data.sender;
      allow read: if false;
      allow write: if false;
      allow delete: if false;
    }

    match /users/{parent}/friends/{document} {
      allow create: if request.auth.uid == parent;
      allow read: if request.auth.uid == parent;
      allow write: if request.auth.uid == parent;
      allow delete: if request.auth.uid == parent;
    }

    match /support_gbonus/{parent}/message_user/{document} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow write: if request.auth != null;
      allow delete: if false;
    }

    match /{path=**}/message_user/{document} {
      allow read: if request.auth != null;
    }


    match /peer-to-peer/{document} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow write: if request.auth != null;
      allow delete: if false;
    }

    match /recommendation/{document} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow write: if request.auth != null;
      allow delete: if false;
    }

    match /support_gbonus/{parent}/reitng/{document} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow write: if request.auth != null;
      allow delete: if false;
    }

    match /{path=**}/reitng/{document} {
      allow read: if request.auth != null;
    }


    match /serversbor/{document} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow write: if request.auth != null;
      allow delete: if false;
    }

    match /support_gbonus/{document} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow write: if request.auth != null;
      allow delete: if false;
    }

    match /users/{document} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow write: if request.auth != null;
      allow delete: if request.auth != null;
    }


    // This rule allows anyone with your Firestore database reference to view, edit,
    // and delete all data in your Firestore database. It is useful for getting
    // started, but it is configured to expire after 30 days because it
    // leaves your app open to attackers. At that time, all client
    // requests to your Firestore database will be denied.
    //
    // Make sure to write security rules for your app before that time, or else
    // all client requests to your Firestore database will be denied until you Update
    // your rules
    
  }
}